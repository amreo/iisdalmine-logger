#!/bin/sh

# funzione help
help () {
	echo "iisdalmine-configure può essere richiamato con queste opzioni: "
	echo "         -u --username imposta l'username da argomenti. Richiede un valore 
	 -s --password imposta la password da opzioni. Richiede un valore
	 -i --firewall-ip imposta l'indirizzo ip del firewall da opzioni. Richiede un valore
	 -p --firewall-port imposta la porta da opzioni. Richiede un valore
	 -v --verbose mosta un log dettagliato di iisdalmine-configure
	 -c --check fa il controllo sull'indirizzo ip e porta del firewall
	 -h --help mostra l'help
	 --show-password mostra la password sullo stdout "
}


# verifica se getopt è quello vecchio o nuovo
getopt --test > /dev/null
if [ $? -ne 4 ]; then 
    echo "La versione di getopt è vecchissima, ti consiglio di aggiornare tutto!.`getopt --test`" 1>&2
    exit 1
fi

# -u --username imposta l'username da argomenti. Richiede un valore
# -s --password imposta la password da opzioni. Richiede un valore
# -i --firewall-ip imposta l'indirizzo ip del firewall da opzioni. Richiede un valore
# -p --firewall-port imposta la porta da opzioni. Richiede un valore
# -v --verbose mosta un log dettagliato di iisdalmine-configure
# -c --check fa il controllo sull'indirizzo ip e porta del firewall
# -h --help mostra l'help
# --show-password mostra la password sullo stdout
SHORT=u:s:i:p:vch
LONG=username:,password:,firewall-ip:,firewall-port:,verbose,show-password,check,help
show_password=s

# Esegue lo parsing dello opzioni
PARSED=`getopt --options $SHORT --longoptions $LONG --name "$0" -- "$@"`

# Controlla l'uscita di getopt per errori
if [ $? -ne 0 ]; then
	echo "Errore nel parsing delle opzioni: $?"	1>&2
	exit 1
fi
eval set -- "$PARSED"

# Imposta le variabili interessate fino a -- 
while true; do
    case "$1" in
        -u|--username)
            username="$2"
            shift 2
            ;;
        -s|--password)
            password="$2"
            shift 2
            ;;
        -i|--firewall-ip)
            firewall_ip="$2"
            shift 2
            ;;
        -p|--firewall-port)
			firewall_port="$2"     
			shift 2
            ;;
		-v|--verbose)
			verbose=yes
            shift 1
            ;;
		-c|--check)
			check=yes
            shift 1
            ;;
		--show-password)
			show_password=
            shift 1
            ;;			 
		-h|--help)
			help
			exit 0
			;;
		--)
            shift
            break
            ;;
        *)
            echo "Errore nelle opzioni"
            exit 1
            ;;
    esac
done

if [ -n "$verbose" ]; then
	echo "\$username=$username"
	echo "\$password=$password"
	echo "\$firewall_ip=$firewall_ip"
	echo "\$firewall_port=$firewall_port"
	echo "\$show_password=$show_password"
	echo "\$check=$check"
fi

# crea la directory .iisdalmine se non esiste
if ! [ -d ~/.iisdalmine ]; then
	mkdir ~/.iisdalmine
	if [ -n "$verbose" ]; then
		echo "Creata dir ~/.iisdalmine"
	fi
fi

# Imposta $username dalle opzioni o dal file ~/.iisdalmine/username.txt 
if [ -n "$username" ]; then # username definito prima (da opzioni)
	sleep 0
elif [ -e ~/.iisdalmine/username.txt ]; then # username non definito, carica l'username da file, solo per mostrarlo all'input
	username=`cat ~/.iisdalmine/username.txt`
	ask_username="true"
else
	ask_username="true"
fi

# Imposta $password dalle opzioni o dal file ~/.iisdalmine/password.txt 
if [ -n "$password" ]; then # password definito prima (da opzioni)
	sleep 0
elif [ -e ~/.iisdalmine/password.txt ]; then # password non definito, carica password da file, solo per mostrarlo all'input
	password=`cat ~/.iisdalmine/password.txt`
	ask_password="true"
else
	ask_password="true"
fi

# Imposta $firewall_ip dalle opzioni o dal file ~/.iisdalmine/firewall-ip.txt 
if [ -n "$firewall_ip" ]; then # firewall_ip definito prima (da opzioni)
	sleep 0
elif [ -e ~/.iisdalmine/firewall-ip.txt ]; then # firewall-ip non definito, carica firewall-ip da file, solo per mostrarlo all'input
	firewall_ip=`cat ~/.iisdalmine/firewall-ip.txt`
	ask_firewall_ip="true"
else
	firewall_ip="172.22.20.254"
	ask_firewall_ip="true"
fi

# Imposta $firewall_port dalle opzioni o dal file ~/.iisdalmine/firewall-port.txt 
if [ -n "$firewall_port" ]; then # firewall_port definito prima (da opzioni)
	sleep 0
elif [ -e ~/.iisdalmine/firewall-port.txt ]; then # firewall-port non definito, carica firewall-port da file, solo per mostrarlo all'input
	firewall_port=`cat ~/.iisdalmine/firewall-port.txt`
	ask_firewall_port="true"
else
	firewall_port=4100
	ask_firewall_port="true"
fi

if [ -n "$verbose" ]; then
	echo "\$username=$username"
	echo "\$password=$password"
	echo "\$firewall_ip=$firewall_ip"
	echo "\$firewall_port=$firewall_port"
fi

# chiede l'username
if [ -n "$ask_username" ]; then
	read -p "username($username): " username
fi
# chiede password
if [ -n "$ask_password" ]; then
	if [ -n "$show_password" ]; then
		stty -echo		
		read -p "password(****): " password
		stty echo
		echo # Va a capo
	else
		read -p "password($password): " password
	fi
fi
# chiede firewall-ip
if [ -n "$ask_firewall_ip" ]; then
	read -p "firewall-ip($firewall_ip): " firewall_ip
fi
# chiede firewall-port
if [ -n "$ask_firewall_port" ]; then
	read -p "firewall-port($firewall_port): " firewall_port
fi

if [ -n "$verbose" ]; then
	echo "\$username=$username"
	echo "\$password=$password"
	echo "\$firewall_ip=$firewall_ip"
	echo "\$firewall_port=$firewall_port"
fi

# scrive l'username nel file se è stata impostata da opzioni o input
if [ -n "$username" ]; then
	echo "$username" > ~/.iisdalmine/username.txt
	if [ -n "$verbose" ]; then
		echo "scritto username in ~/.iisdalmine/username.txt"
	fi 
elif ! [ -e ~/.iisdalmine/username.txt ]; then
	touch ~/.iisdalmine/username.txt
	if [ -n "$verbose" ]; then
		echo "creato ~/.iisdalmine/username.txt perchè non esiste"
	fi 	
fi

# scrive la password nel file se è stata impostata da opzioni o input
if [ -n "$password" ]; then
	echo "$password" > ~/.iisdalmine/password.txt
	if [ -n "$verbose" ]; then
		echo "scritto password in ~/.iisdalmine/password.txt"
	fi 
elif ! [ -e ~/.iisdalmine/password.txt ]; then
	touch ~/.iisdalmine/password.txt
	if [ -n "$verbose" ]; then
		echo "creato ~/.iisdalmine/password.txt perchè non esiste"
	fi 	
fi

# scrive l'firewall-ip nel file se è stata impostata da opzioni o input
if [ -n "$firewall_ip" ]; then
	echo "$firewall_ip" > ~/.iisdalmine/firewall-ip.txt
	if [ -n "$verbose" ]; then
		echo "scritto firewall_ip in ~/.iisdalmine/firewall-ip.txt"
	fi 
elif ! [ -e ~/.iisdalmine/firewall-ip.txt ]; then
	echo "172.22.20.254" > ~/.iisdalmine/firewall-ip.txt
	if [ -n "$verbose" ]; then
		echo "creato ~/.iisdalmine/firewall-ip.txt perchè non esiste"
	fi 	
fi

# scrive l'firewall-port nel file se è stata impostata da opzioni o input
if [ -n "$firewall_port" ]; then
	echo "$firewall_port" > ~/.iisdalmine/firewall-port.txt
	if [ -n "$verbose" ]; then
		echo "scritto firewall_port in ~/.iisdalmine/firewall-port.txt"
	fi 
elif ! [ -e ~/.iisdalmine/firewall-port.txt ]; then
	echo "4100" > ~/.iisdalmine/firewall-port.txt
	if [ -n "$verbose" ]; then
		echo "creato ~/.iisdalmine/firewall-port.txt perchè non esiste"
	fi 	
fi

# esegue il controllo
if [ -n "$check" ]; then
	if [ -n "$verbose" ]; then
		iisdalmine-check --verbose
	else
		iisdalmine-check
	fi
fi
